//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/sun_t/BotegyApp/Assets/Scripts/CodeParser\ParserGrammar.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IParserGrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class ParserGrammarBaseListener : IParserGrammarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserGrammarParser.ident"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdent([NotNull] ParserGrammarParser.IdentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserGrammarParser.ident"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdent([NotNull] ParserGrammarParser.IdentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserGrammarParser.call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCall([NotNull] ParserGrammarParser.CallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserGrammarParser.call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCall([NotNull] ParserGrammarParser.CallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Value</c>
	/// labeled alternative in <see cref="ParserGrammarParser.group"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue([NotNull] ParserGrammarParser.ValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Value</c>
	/// labeled alternative in <see cref="ParserGrammarParser.group"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue([NotNull] ParserGrammarParser.ValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Braces</c>
	/// labeled alternative in <see cref="ParserGrammarParser.group"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBraces([NotNull] ParserGrammarParser.BracesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Braces</c>
	/// labeled alternative in <see cref="ParserGrammarParser.group"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBraces([NotNull] ParserGrammarParser.BracesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Function</c>
	/// labeled alternative in <see cref="ParserGrammarParser.group"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction([NotNull] ParserGrammarParser.FunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Function</c>
	/// labeled alternative in <see cref="ParserGrammarParser.group"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction([NotNull] ParserGrammarParser.FunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>Identifier</c>
	/// labeled alternative in <see cref="ParserGrammarParser.group"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] ParserGrammarParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>Identifier</c>
	/// labeled alternative in <see cref="ParserGrammarParser.group"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] ParserGrammarParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserGrammarParser.mult"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMult([NotNull] ParserGrammarParser.MultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserGrammarParser.mult"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMult([NotNull] ParserGrammarParser.MultContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserGrammarParser.add"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdd([NotNull] ParserGrammarParser.AddContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserGrammarParser.add"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdd([NotNull] ParserGrammarParser.AddContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserGrammarParser.compare1"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompare1([NotNull] ParserGrammarParser.Compare1Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserGrammarParser.compare1"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompare1([NotNull] ParserGrammarParser.Compare1Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserGrammarParser.compare2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompare2([NotNull] ParserGrammarParser.Compare2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserGrammarParser.compare2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompare2([NotNull] ParserGrammarParser.Compare2Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserGrammarParser.logical_and"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogical_and([NotNull] ParserGrammarParser.Logical_andContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserGrammarParser.logical_and"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogical_and([NotNull] ParserGrammarParser.Logical_andContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserGrammarParser.logical_or"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogical_or([NotNull] ParserGrammarParser.Logical_orContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserGrammarParser.logical_or"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogical_or([NotNull] ParserGrammarParser.Logical_orContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpr([NotNull] ParserGrammarParser.ExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserGrammarParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpr([NotNull] ParserGrammarParser.ExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserGrammarParser.assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign([NotNull] ParserGrammarParser.AssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserGrammarParser.assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign([NotNull] ParserGrammarParser.AssignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserGrammarParser.simple_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimple_stmt([NotNull] ParserGrammarParser.Simple_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserGrammarParser.simple_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimple_stmt([NotNull] ParserGrammarParser.Simple_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserGrammarParser.composite"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComposite([NotNull] ParserGrammarParser.CompositeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserGrammarParser.composite"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComposite([NotNull] ParserGrammarParser.CompositeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserGrammarParser.if"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf([NotNull] ParserGrammarParser.IfContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserGrammarParser.if"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf([NotNull] ParserGrammarParser.IfContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserGrammarParser.while"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile([NotNull] ParserGrammarParser.WhileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserGrammarParser.while"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile([NotNull] ParserGrammarParser.WhileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserGrammarParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmt([NotNull] ParserGrammarParser.StmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserGrammarParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmt([NotNull] ParserGrammarParser.StmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserGrammarParser.stmt_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStmt_list([NotNull] ParserGrammarParser.Stmt_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserGrammarParser.stmt_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStmt_list([NotNull] ParserGrammarParser.Stmt_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ParserGrammarParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] ParserGrammarParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ParserGrammarParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] ParserGrammarParser.ProgramContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
